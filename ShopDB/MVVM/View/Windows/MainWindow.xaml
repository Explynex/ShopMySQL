<Window x:Class="ShopDB.MVVM.View.Windows.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
        xmlns:viewmodels="clr-namespace:ShopDB.MVVM.ViewModels" 
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:menus="clr-namespace:ShopDB.MVVM.View.Submenus"
        mc:Ignorable="d"
        Title="ShopDB"
        Height="650" Width="920"
        MinHeight="500" MinWidth="750"
        Background="Transparent" 
        AllowsTransparency="True"
        WindowState="{Binding WindowState}"
        WindowStyle="None"
        MouseDoubleClick="MainWindowStateChange"
        ResizeMode="CanResizeWithGrip">
    <Window.DataContext>
        <viewmodels:MainWindowViewModel/>
    </Window.DataContext>
    
    <Window.Resources>
        
        <Style x:Key="MenuTextBlock" TargetType="{x:Type TextBlock}">
            <Setter Property="FontFamily" Value="Poppins"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Margin" Value="16 0 0 0"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>



        <Style x:Key="MenuField" TargetType="{x:Type DockPanel}">
            <Setter Property="MaxWidth" Value="230"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsChecked,ElementName=MenuButton}" Value="True">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="MaxWidth"
                                                 To="75" Duration="0:0:0.6">
                                    <DoubleAnimation.EasingFunction>
                                        <CircleEase EasingMode="EaseInOut"/>
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                    <DataTrigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="MaxWidth"
                                                 To="230" Duration="0:0:0.6">
                                    <DoubleAnimation.EasingFunction>
                                        <CircleEase EasingMode="EaseInOut"/>
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.ExitActions>
                </DataTrigger>
            </Style.Triggers>
        </Style>


        <Style x:Key="ThemeButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Width" Value="30"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Grid>
                            <Border x:Name="Border" Background="Transparent" Opacity="0.4" CornerRadius="15"/>
                            <materialDesign:PackIcon x:Name="Light" Kind="WbSunny" Foreground="{DynamicResource PrimaryTextBrush}"
                                                     VerticalAlignment="Center" HorizontalAlignment="Center"
                                                     Width="21" Height="21"/>
                            <materialDesign:PackIcon x:Name="Dark" Kind="WeatherNight" 
                                                     Foreground="{DynamicResource PrimaryTextBrush}" VerticalAlignment="Center" HorizontalAlignment="Center"
                                                     Width="23" Height="23" Opacity="0">
                            </materialDesign:PackIcon>
                        </Grid>
                        
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="{DynamicResource SecundaryBackgroundBrush}"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="Light" 
                                                             Storyboard.TargetProperty="Opacity"
                                                             To="0" Duration="0:0:0.7"/>
                                            <DoubleAnimation Storyboard.TargetName="Dark"
                                                             Storyboard.TargetProperty="Opacity"
                                                             To="1" Duration="0:0:0.7"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="Light" 
                                                             Storyboard.TargetProperty="Opacity"
                                                             To="1" Duration="0:0:0.7"/>
                                            <DoubleAnimation Storyboard.TargetName="Dark"
                                                             Storyboard.TargetProperty="Opacity"
                                                             To="0" Duration="0:0:0.7"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                        
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <Border CornerRadius="12" Background="{DynamicResource PrimaryBackgroundBrush}" PreviewMouseDown="Border_PreviewMouseDown" >
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition/>
            </Grid.RowDefinitions>

            <DockPanel x:Name="TopDockPanel" Background="Transparent"  Height="47" Grid.ColumnSpan="2" Grid.Row="0" MouseDown="DragMove">

                <!-- MenuButton -->
                <ToggleButton x:Name="MenuButton" Margin="20 5 0 0" HorizontalAlignment="Left" Width="25" Height="25" IsChecked="{Binding IsSidebarMinimize}">
                    <ToggleButton.Style>
                        <Style TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource MaterialDesignHamburgerToggleButton}">
                            <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
                            <Setter Property="Cursor" Value="Hand"/>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Foreground" Value="{DynamicResource SecundaryBlueBrush}"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ToggleButton.Style>
                </ToggleButton>

                <!-- Window operations panel -->
                <StackPanel  Orientation="Horizontal" DockPanel.Dock="Right"
                          Width="65"
                         VerticalAlignment="Top" Margin="0 17 17 0">

                    <!-- Minimize -->
                    <Rectangle Style="{StaticResource MainWindowTopButtons}" Fill="#efbb46">
                        <Rectangle.InputBindings>
                            <MouseBinding Gesture="LeftClick" Command="{Binding MinimizeAppCommand}"/>
                        </Rectangle.InputBindings>
                    </Rectangle>

                    <!-- Maximize -->
                    <Rectangle Style="{StaticResource MainWindowTopButtons}" Fill="#4fd83d"  Margin="8 0 0 0" >
                        <Rectangle.InputBindings>
                            <MouseBinding Gesture="LeftClick" Command="{Binding MaximizeAppCommand}"/>
                        </Rectangle.InputBindings>
                    </Rectangle>

                    <!-- Close -->
                    <Rectangle Style="{StaticResource MainWindowTopButtons}" Fill="#ec493f" Margin="8 0 0 0">
                        <Rectangle.InputBindings>
                            <MouseBinding Gesture="LeftClick" Command="{Binding CloseAppCommand}"/>
                        </Rectangle.InputBindings>
                    </Rectangle>

                </StackPanel>

                <StackPanel   VerticalAlignment="Top" Margin="0 10 0 0" Orientation="Horizontal" HorizontalAlignment="Right" >
                    
                    <ToggleButton Style="{StaticResource ThemeButton}"/>
                    <ToggleButton x:Name="otherMenuButton" Margin="3 0 20 0"
                     Background="Transparent"  Height="30">
                        <materialDesign:PackIcon Kind="DotsHorizontal" Width="35" Height="30" />
                        <ToggleButton.Style>
                            <Style TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource IcoButton}">
                                <Style.Triggers>
                                    <Trigger Property="IsChecked" Value="True">
                                        <Setter Property="Foreground" Value="{DynamicResource SecundaryBlueBrush}"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </ToggleButton.Style>
                    </ToggleButton>
                </StackPanel>

              

            </DockPanel>
            
           



            <!--#region Left Menu -->
            
            <DockPanel x:Name="Sidebar" Grid.Row="1" Style="{StaticResource MenuField}">
                <DockPanel.CacheMode>
                    <BitmapCache/>
                </DockPanel.CacheMode>
                <StackPanel DockPanel.Dock="Top">
                    <!-- Top text -->
                    <Canvas Height="58">
                        <StackPanel Orientation="Horizontal" Margin="0 -10 0 0">
                            <Image Source="\Resources\Logo.png" Width="75" Height="62" VerticalAlignment="Top" Margin="10 0 0 0"
                       Stretch="Fill" HorizontalAlignment="Left">
                                <Image.Effect>
                                    <DropShadowEffect ShadowDepth="0"
                          Color="{DynamicResource PrimaryGlowColor}"
                          Opacity="1"
                          BlurRadius="3"/>
                                </Image.Effect>
                            </Image>
                            <TextBlock FontFamily="Poppins" FontSize="32" FontWeight="DemiBold" LineStackingStrategy="BlockLineHeight" LineHeight="20"
                               VerticalAlignment="Bottom" Margin="-13 0 0 6" Foreground="{DynamicResource SecundaryBlueBrush}"
                               Visibility="{Binding IsSidebarMinimize,Converter={StaticResource InverseBooleanToVisibilityConverter}}">
                                <TextBlock.Effect>
                                    <DropShadowEffect ShadowDepth="0"
                          Color="{DynamicResource PrimaryGlowColor}"
                          Opacity="1"
                          BlurRadius="3"/>
                                </TextBlock.Effect>omeshop
                            </TextBlock>
                        </StackPanel>
                    </Canvas>
                   

                    <Rectangle Fill="{DynamicResource SecundaryBackgroundBrush}" Margin="10 0 0 0" Height="0.6" Opacity="0.7" RadiusY="2" RadiusX="2" Width="220">
                        <Rectangle.Effect>
                            <DropShadowEffect ShadowDepth="1" Color="Black" Opacity="0.3"/>
                        </Rectangle.Effect>
                    </Rectangle>

                    <TextBlock Text="Menu:" FontFamily="Poppins" Foreground="Black" Opacity="0.8"
                           Margin="25 10 0 0" FontSize="14"/>

                    <RadioButton x:Name="dashboardButton" Style="{StaticResource MenuRadioButtonStyle}" IsChecked="True" Command="{Binding CatalogViewCommand}"  >
                        <DockPanel Width="185">
                            <materialDesign:PackIcon Kind="Inboxes" Width="24" Height="24"/>
                            <TextBlock Text="Catalog" Style="{StaticResource MenuTextBlock}" />
                            <Button Style="{StaticResource CircleButton}" HorizontalAlignment="Right" Command="{Binding AddProductCommand}"
                                Width="22" Height="22" Background="{DynamicResource SecundaryBlueBrush}" >
                                <materialDesign:PackIcon Kind="Plus" Width="18" Height="18" Foreground="{DynamicResource TertiaryBackgroundBrush}"/>
                                <Button.Effect>
                                    <DropShadowEffect ShadowDepth="0"  Color="{DynamicResource PrimaryGlowColor}" BlurRadius="5"/>
                                </Button.Effect>
                            </Button>
                        </DockPanel>
                    </RadioButton>

                    <RadioButton x:Name="myProjectsButton" Style="{StaticResource MenuRadioButtonStyle}" Command="{Binding OrdersCommand}">
                        <DockPanel Width="185">
                            <materialDesign:PackIcon Kind="ListBoxOutline" Width="24" Height="24"/>
                            <TextBlock Text="My orders" Style="{StaticResource MenuTextBlock}" />

                        </DockPanel>
                    </RadioButton>

                    <RadioButton  Style="{StaticResource MenuRadioButtonStyle}">
                        <StackPanel Orientation="Horizontal">
                            <materialDesign:PackIcon Kind="HeartOutline" Width="24" Height="24"/>
                            <TextBlock Text="Wishlist" Style="{StaticResource MenuTextBlock}" />
                        </StackPanel>
                    </RadioButton>

                    <RadioButton  Style="{StaticResource MenuRadioButtonStyle}">
                        <StackPanel Orientation="Horizontal">
                            <materialDesign:PackIcon Kind="CartOutline" Width="24" Height="24"/>
                            <TextBlock Text="Cart" Style="{StaticResource MenuTextBlock}" />
                        </StackPanel>
                    </RadioButton>

                    <RadioButton  Style="{StaticResource MenuRadioButtonStyle}">
                        <StackPanel Orientation="Horizontal">
                            <materialDesign:PackIcon Kind="TooltipQuestionOutline" Width="24" Height="24"/>
                            <TextBlock Text="Contact us" Style="{StaticResource MenuTextBlock}" />
                        </StackPanel>
                    </RadioButton>


                </StackPanel>

                <StackPanel Orientation="Horizontal" DockPanel.Dock="Bottom" VerticalAlignment="Bottom" Margin="28 0 0 30" Grid.Row="1">
                    <Button Style="{StaticResource CircleButton}"  Command="{Binding LogoutCommand}" Margin="2 0 0 0"
                            ToolTipService.Placement="Top"
                                Width="33" Height="33" Background="{DynamicResource SecundaryBlueBrush}" >
                        <materialDesign:PackIcon Kind="Logout" Width="20" Height="20" Foreground="{DynamicResource TertiaryBackgroundBrush}"/>
                        <Button.Effect>
                            <DropShadowEffect ShadowDepth="0"  Color="{DynamicResource PrimaryGlowColor}" BlurRadius="5"/>
                        </Button.Effect>
                        <Button.ToolTip>
                            <TextBlock Text="Logout"/>
                        </Button.ToolTip>
                    </Button>

                    <StackPanel VerticalAlignment="Center" Margin="10 0 0 0" Visibility="{Binding IsSidebarMinimize,Converter={StaticResource InverseBooleanToVisibilityConverter}}">
                        <TextBlock Text="Hello, " FontFamily="Poppins" FontSize="13"
                           Foreground="{DynamicResource PrimaryTextBrush}"/>
                        <TextBlock Text="{Binding AuthenticatedUser.Username,StringFormat={}{0}!}" FontFamily="Poppins" FontSize="13"
                           Foreground="{DynamicResource SecundaryBlueBrush}"  />
                    </StackPanel>

                </StackPanel>
            </DockPanel>
            



         
                <!--              <RadioButton Style="{StaticResource MaterialDesignChoiceChipPrimaryRadioButton}" Background="{DynamicResource SecundaryBlueBrush}">
                    <materialDesign:PackIcon Kind="WbSunny" Foreground="Orange" Opacity="0.6"/>
                </RadioButton>
                <RadioButton Style="{StaticResource MaterialDesignChoiceChipPrimaryRadioButton}"  Background="{DynamicResource SecundaryBlueBrush}" Margin="55 0 0 0">
                    <materialDesign:PackIcon Kind="WeatherNight" Foreground="Blue" Opacity="0.8"/>
                </RadioButton>-->
            

            <!--#endregion-->




            <Border Grid.Column="1" Margin="15 0 0 25" Grid.Row="1" 
                    CornerRadius="10 0 0 10" Background="{DynamicResource SecundaryBackgroundBrush}" Opacity="1">
                <ContentControl Content="{Binding CurrentView}">
                    <ContentControl.CacheMode>
                        <BitmapCache/>
                    </ContentControl.CacheMode>
                </ContentControl>
            </Border>

            <menus:OtherMenu x:Name="OtherMenu" Grid.Column="1" Grid.RowSpan="2" VerticalAlignment="Top" 
                             HorizontalAlignment="Right" Margin="0 45 95 0" Height="0" >
                <menus:OtherMenu.Effect>
                    <DropShadowEffect ShadowDepth="0"  Color="{DynamicResource SecundaryGlowColor}" BlurRadius="5"/>
                </menus:OtherMenu.Effect>
                <menus:OtherMenu.Style>
                    <Style TargetType="menus:OtherMenu">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsChecked,ElementName=otherMenuButton}" Value="True">
                                <DataTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="Height"
                                                             To="170" Duration="0:0:0.6">
                                                <DoubleAnimation.EasingFunction>
                                                    <CircleEase EasingMode="EaseIn"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.EnterActions>
                                <DataTrigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="Height"
                                                 To="0" Duration="0:0:0.6">
                                                <DoubleAnimation.EasingFunction>
                                                    <CircleEase EasingMode="EaseIn"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                            
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.ExitActions>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </menus:OtherMenu.Style>
            </menus:OtherMenu>
        </Grid>
    </Border>

</Window>
